name: Legacy Test

on:
    pull_request:
        branches:
            - dev
        paths:
            - '**'
            - '!**/*.md'
            - '!vscode/**'
            - '!website/**'

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                node: [14, 16]
        steps:
            - uses: actions/checkout@v3
              with:
                  # SEE: https://github.com/lerna/lerna/issues/2542
                  fetch-depth: '0'

            - name: Install for build on Node.js v18
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: Cache Restore devDependencies
              id: cache-restore-dev-depends
              uses: actions/cache/restore@v3
              with:
                  path: '**/node_modules'
                  key: os-ubuntu-latest-node18-dev-${{ hashFiles('yarn.lock') }}

            - name: Install devDependencies
              if: steps.cache-restore-dev-depends.outputs.cache-hit != 'true'
              run: yarn install --frozen-lockfile --check-files

            - name: Cache Save devDependencies
              if: steps.cache-restore-dev-depends.outputs.cache-hit != 'true'
              id: cache-save-dev-depends
              uses: actions/cache/save@v3
              with:
                  path: '**/node_modules'
                  key: os-ubuntu-latest-node18-dev-${{ hashFiles('yarn.lock') }}

            - name: Build
              run: yarn build

            - name: Switch Node.js ${{ matrix.node }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node }}

            - name: Cache Restore productionDependencies
              id: cache-restore-prod-depends
              uses: actions/cache/restore@v3
              with:
                  path: '**/node_modules'
                  key: os-ubuntu-latest-node${{ matrix.node }}-prod-${{ hashFiles('yarn.lock') }}

            - name: Clean modules
              if: (runner.os == 'Linux' || runner.os == 'macOS') && steps.cache-restore-prod-depends.outputs.cache-hit != 'true'
              run: npx rimraf "./**/node_modules"

            - name: Clean modules (Windows)
              if: runner.os == 'Windows' && steps.cache-restore-prod-depends.outputs.cache-hit != 'true'
              run: npx rimraf --glob ".\**\node_modules"

            - name: Install prodcution dependencies
              if: steps.cache-restore-prod-depends.outputs.cache-hit != 'true'
              run: yarn install --production --frozen-lockfile --check-files --ignore-engines

            - name: Cache Save productionDependencies
              id: cache-save-prod-depends
              uses: actions/cache/save@v3
              with:
                  path: '**/node_modules'
                  key: os-ubuntu-latest-node${{ matrix.node }}-prod-${{ hashFiles('yarn.lock') }}

            - name: Test on Node.js v${{ matrix.node }}
              run: yarn test:coverage
